/******/ (() => { // webpackBootstrap
/*!********************!*\
  !*** ./js/main.ts ***!
  \********************/
// Create a Teacher object with extra properties
var teacher3 = {
    firstName: 'lea',
    fullTimeEmployee: false,
    lastName: 'julee',
    location: 'London',
    contract: false,
};
console.log(teacher3);
// Create a Directors object
var director1 = {
    firstName: 'lea',
    fullTimeEmployee: false,
    lastName: 'julee',
    location: 'London',
    contract: false,
    numberOfReports: 21,
};
// Logs director1 object
console.log(director1);
// Implement function to print formatted name
var printTeacher = function (firstName, lastName) {
    return firstName[0].toUpperCase() + ". " + lastName;
};
// Logs "J. Doe"
console.log(printTeacher("John", "Doe"));
// Class implements Student interface
var StudentClass = /** @class */ (function () {
    function StudentClass(firstName, lastName) {
        this.firstName = firstName;
        this.lastName = lastName;
    }
    StudentClass.prototype.workOnHomework = function () {
        return "Currently working";
    };
    StudentClass.prototype.displayName = function () {
        return this.firstName;
    };
    return StudentClass;
}());
var student = new StudentClass('John', 'Doe');
console.log(student.displayName()); // Logs "John"
console.log(student.workOnHomework()); // Logs "Currently working"

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFVQSxnREFBZ0Q7QUFDaEQsSUFBSSxRQUFRLEdBQVk7SUFDdEIsU0FBUyxFQUFFLEtBQUs7SUFDaEIsZ0JBQWdCLEVBQUUsS0FBSztJQUN2QixRQUFRLEVBQUUsT0FBTztJQUNqQixRQUFRLEVBQUUsUUFBUTtJQUNsQixRQUFRLEVBQUUsS0FBSztDQUNoQixDQUFDO0FBQ0YsT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsQ0FBQztBQU90Qiw0QkFBNEI7QUFDNUIsSUFBTSxTQUFTLEdBQWM7SUFDM0IsU0FBUyxFQUFFLEtBQUs7SUFDaEIsZ0JBQWdCLEVBQUUsS0FBSztJQUN2QixRQUFRLEVBQUUsT0FBTztJQUNqQixRQUFRLEVBQUUsUUFBUTtJQUNsQixRQUFRLEVBQUUsS0FBSztJQUNmLGVBQWUsRUFBRSxFQUFFO0NBQ3BCLENBQUM7QUFDRix3QkFBd0I7QUFDeEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztBQU92Qiw2Q0FBNkM7QUFDN0MsSUFBTSxZQUFZLEdBQXlCLFVBQUMsU0FBUyxFQUFFLFFBQVE7SUFDN0QsT0FBTyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxFQUFFLEdBQUcsSUFBSSxHQUFHLFFBQVEsQ0FBQztBQUN0RCxDQUFDLENBQUM7QUFDRixnQkFBZ0I7QUFDaEIsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxDQUFDLENBQUM7QUFpQnpDLHFDQUFxQztBQUNyQztJQU1FLHNCQUFZLFNBQWlCLEVBQUUsUUFBZ0I7UUFDN0MsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDM0IsQ0FBQztJQUVELHFDQUFjLEdBQWQ7UUFDRSxPQUFPLG1CQUFtQixDQUFDO0lBQzdCLENBQUM7SUFFRCxrQ0FBVyxHQUFYO1FBQ0UsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7SUFDSCxtQkFBQztBQUFELENBQUM7QUFFRCxJQUFNLE9BQU8sR0FBRyxJQUFJLFlBQVksQ0FBQyxNQUFNLEVBQUUsS0FBSyxDQUFDLENBQUM7QUFDaEQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLENBQUMsQ0FBQyxDQUFJLGNBQWM7QUFDckQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxPQUFPLENBQUMsY0FBYyxFQUFFLENBQUMsQ0FBQyxDQUFDLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL3R5cGVzY3JpcHRfZGVwZW5kZW5jaWVzLy4vanMvbWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUYXNrIDE6IFRlYWNoZXIgaW50ZXJmYWNlIHdpdGggcmVxdWlyZWQgYW5kIG9wdGlvbmFsIHByb3BlcnRpZXNcbmludGVyZmFjZSBUZWFjaGVyIHtcbiAgcmVhZG9ubHkgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIHJlYWRvbmx5IGxhc3ROYW1lOiBzdHJpbmc7XG4gIGZ1bGxUaW1lRW1wbG95ZWU6IGJvb2xlYW47XG4gIHllYXJzT2ZFeHBlcmllbmNlPzogbnVtYmVyO1xuICBsb2NhdGlvbjogc3RyaW5nO1xuICBbcHJvcE5hbWU6IHN0cmluZ106IGFueTtcbn1cblxuLy8gQ3JlYXRlIGEgVGVhY2hlciBvYmplY3Qgd2l0aCBleHRyYSBwcm9wZXJ0aWVzXG5sZXQgdGVhY2hlcjM6IFRlYWNoZXIgPSB7XG4gIGZpcnN0TmFtZTogJ2xlYScsXG4gIGZ1bGxUaW1lRW1wbG95ZWU6IGZhbHNlLFxuICBsYXN0TmFtZTogJ2p1bGVlJyxcbiAgbG9jYXRpb246ICdMb25kb24nLFxuICBjb250cmFjdDogZmFsc2UsXG59O1xuY29uc29sZS5sb2codGVhY2hlcjMpO1xuXG5cbi8vIFRhc2sgMjogRGlyZWN0b3JzIGludGVyZmFjZSBleHRlbmRzIFRlYWNoZXIgYW5kIGFkZHMgYG51bWJlck9mUmVwb3J0c2BcbmludGVyZmFjZSBEaXJlY3RvcnMgZXh0ZW5kcyBUZWFjaGVyIHtcbiAgbnVtYmVyT2ZSZXBvcnRzOiBudW1iZXI7XG59XG4vLyBDcmVhdGUgYSBEaXJlY3RvcnMgb2JqZWN0XG5jb25zdCBkaXJlY3RvcjE6IERpcmVjdG9ycyA9IHtcbiAgZmlyc3ROYW1lOiAnbGVhJyxcbiAgZnVsbFRpbWVFbXBsb3llZTogZmFsc2UsXG4gIGxhc3ROYW1lOiAnanVsZWUnLFxuICBsb2NhdGlvbjogJ0xvbmRvbicsXG4gIGNvbnRyYWN0OiBmYWxzZSxcbiAgbnVtYmVyT2ZSZXBvcnRzOiAyMSxcbn07XG4vLyBMb2dzIGRpcmVjdG9yMSBvYmplY3RcbmNvbnNvbGUubG9nKGRpcmVjdG9yMSk7XG5cblxuLy8gVGFzayAzOiBGdW5jdGlvbiB0eXBlIGludGVyZmFjZSB0byBmb3JtYXQgYW5kIHByaW50IG5hbWVzXG5pbnRlcmZhY2UgcHJpbnRUZWFjaGVyRnVuY3Rpb24ge1xuICAoZmlyc3ROYW1lOiBzdHJpbmcsIGxhc3ROYW1lOiBzdHJpbmcpOiBzdHJpbmc7XG59XG4vLyBJbXBsZW1lbnQgZnVuY3Rpb24gdG8gcHJpbnQgZm9ybWF0dGVkIG5hbWVcbmNvbnN0IHByaW50VGVhY2hlcjogcHJpbnRUZWFjaGVyRnVuY3Rpb24gPSAoZmlyc3ROYW1lLCBsYXN0TmFtZSkgPT4ge1xuICByZXR1cm4gZmlyc3ROYW1lWzBdLnRvVXBwZXJDYXNlKCkgKyBcIi4gXCIgKyBsYXN0TmFtZTtcbn07XG4vLyBMb2dzIFwiSi4gRG9lXCJcbmNvbnNvbGUubG9nKHByaW50VGVhY2hlcihcIkpvaG5cIiwgXCJEb2VcIikpO1xuXG5cbi8vIFRhc2sgNDogSW50ZXJmYWNlcyBhbmQgQ2xhc3MgZm9yIFN0dWRlbnRcbmludGVyZmFjZSBTdHVkZW50Q2xhc3NJbnRlcmZhY2Uge1xuICBmaXJzdE5hbWU6IHN0cmluZztcbiAgbGFzdE5hbWU6IHN0cmluZztcbiAgYWdlOiBudW1iZXI7XG4gIGxvY2F0aW9uOiBzdHJpbmc7XG4gIHdvcmtPbkhvbWV3b3JrKCk6IHN0cmluZztcbiAgZGlzcGxheU5hbWUoKTogc3RyaW5nO1xufVxuXG5pbnRlcmZhY2UgU3R1ZGVudENsYXNzQ29uc3RydWN0YWJsZSB7XG4gIG5ldyhmaXJzdE5hbWU6IHN0cmluZywgbGFzdE5hbWU6IHN0cmluZyk6IFN0dWRlbnRDbGFzc0ludGVyZmFjZTtcbn1cblxuLy8gQ2xhc3MgaW1wbGVtZW50cyBTdHVkZW50IGludGVyZmFjZVxuY2xhc3MgU3R1ZGVudENsYXNzIGltcGxlbWVudHMgU3R1ZGVudENsYXNzSW50ZXJmYWNlIHtcbiAgZmlyc3ROYW1lOiBzdHJpbmc7XG4gIGxhc3ROYW1lOiBzdHJpbmc7XG4gIGFnZTogbnVtYmVyO1xuICBsb2NhdGlvbjogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKGZpcnN0TmFtZTogc3RyaW5nLCBsYXN0TmFtZTogc3RyaW5nKSB7XG4gICAgdGhpcy5maXJzdE5hbWUgPSBmaXJzdE5hbWU7XG4gICAgdGhpcy5sYXN0TmFtZSA9IGxhc3ROYW1lO1xuICB9XG5cbiAgd29ya09uSG9tZXdvcmsoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gXCJDdXJyZW50bHkgd29ya2luZ1wiO1xuICB9XG5cbiAgZGlzcGxheU5hbWUoKTogc3RyaW5nIHtcbiAgICByZXR1cm4gdGhpcy5maXJzdE5hbWU7XG4gIH1cbn1cblxuY29uc3Qgc3R1ZGVudCA9IG5ldyBTdHVkZW50Q2xhc3MoJ0pvaG4nLCAnRG9lJyk7XG5jb25zb2xlLmxvZyhzdHVkZW50LmRpc3BsYXlOYW1lKCkpOyAgICAvLyBMb2dzIFwiSm9oblwiXG5jb25zb2xlLmxvZyhzdHVkZW50LndvcmtPbkhvbWV3b3JrKCkpOyAvLyBMb2dzIFwiQ3VycmVudGx5IHdvcmtpbmdcIlxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9